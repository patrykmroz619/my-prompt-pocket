name: Netlify deployment workflow

on:
  workflow_dispatch:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Lint code
        run: bun run lint

  unit-test:
    name: Unit Tests
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run unit tests
        run: bun run test

  build-and-deploy:
    name: Build and Deploy to Netlify
    needs: [lint, unit-test]
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build project
        run: bun run build
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
          OPENROUTER_BASE_URL: ${{ secrets.OPENROUTER_BASE_URL }}

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v3.0
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        with:
          publish-dir: "./dist"
          production-branch: master
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: false
          enable-commit-comment: true
          overwrites-pull-request-comment: true

        timeout-minutes: 1

  deployment-status:
    name: Deployment Status
    needs: [build-and-deploy]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download test artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Create deployment status comment
        uses: actions/github-script@v7
        with:
          script: |
            const lintStatus = "${{ needs.lint.result }}" === "success" ? "✅" : "❌";
            const unitTestStatus = "${{ needs.unit-test.result }}" === "success" ? "✅" : "❌";
            const deployStatus = "${{ needs.build-and-deploy.result }}" === "success" ? "✅" : "❌";

            const allPassed = [lintStatus, unitTestStatus, deployStatus].every(status => status === "✅");
            const overallStatus = allPassed ? "✅ All checks passed!" : "❌ Some checks failed!";

            const comment = `## Deployment Status: ${overallStatus}

            | Check | Status |
            | ----- | ------ |
            | Lint | ${lintStatus} |
            | Unit Tests | ${unitTestStatus} |
            | Deployment | ${deployStatus} |

            ${allPassed ? '🎉 Successfully deployed to Netlify production environment!' : '⚠️ Deployment failed. Please check the logs for details.'}
            `;

            // Create a deployment status comment on the latest commit
            const { data: { commit: { message } } } = await github.rest.repos.getCommit({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha
            });

            await github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: comment
            });
